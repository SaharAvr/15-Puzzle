{"version":3,"sources":["pages/GamePage/components/Board/BoardView.scss","pages/GamePage/components/Stats/Stats.scss","shared/components/AnimatedButton/AnimatedButton.scss","pages/GamePage/GamePage.scss","pages/LeaderboardPage/LeaderboardPage.scss","pages/MainPage/MainPage.scss","index.scss","shared/components/AnimatedButton/AnimatedButton.js","shared/routes/consts.js","shared/selectors/selectors.js","store/actions.js","pages/MainPage/MainPage.js","shared/components/AlertDialog.js","shared/rest/restUrls.js","shared/utils/timeUtils.js","pages/GamePage/components/Stats/Stats.js","pages/GamePage/components/Board/useCheats.js","pages/GamePage/components/Board/boardHelper.js","pages/GamePage/components/Board/BoardView.js","pages/GamePage/components/Board/BoardContainer.js","store/init.js","pages/GamePage/GamePage.js","pages/LeaderboardPage/LeaderboardPage.js","shared/services/hotjar.js","shared/services/Services.js","store/reducer.js","App.js","index.js"],"names":["module","exports","AnimatedButton","React","forwardRef","ref","className","text","onClick","href","disabled","classNames","styles","animatedButton","animatedButtonInnerWrapper","animatedButtonBgContainer","role","defaultProps","propTypes","PropTypes","string","func","bool","pathNames","selectUsername","state","username","selectIsGameMode","isGameMode","selectIsPaused","isPaused","selectMoves","moves","selectTime","time","setUsername","makeActionCreator","setIsGameMode","setIsPaused","setMoves","setTime","MainPage","dispatch","useDispatch","useSelector","inputRef","useRef","startButtonLinkRef","useState","isInputFocused","setIsInputFocused","isInputValid","length","showInputError","resetUsernameOnLoad","useCallback","actions","focusInputOnLoad","current","focus","onSubmit","e","preventDefault","click","useEffect","mainPage","inputWrapper","withError","data-validate","type","name","placeholder","onChange","target","value","onFocus","onBlur","data-symbol","AlertDialog","title","body","confirmButton","discardButton","delayMS","showAfterDelay","_","isNumber","isOpen","setIsOpen","openDialogAfterDelay","setTimeout","onConfirm","isFunction","onDiscard","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","restUrls","reduce","CONFIGURATION","RECORD","LEADERBOARD","res","endpoint","endpointKey","process","replace","Date","toUTCString","Stats","restartGame","timeRef","startTime","useMemo","now","pauseClickTime","setPauseClickTime","totalPauseTimeCount","setTotalPauseTimeCount","totalPlayTimeCount","updateTime","updateTimeRef","pauseGame","resumeGame","stats","restartButton","pauseButton","resumeButton","timeUtils","cheats","SWAP","maxCheatStringLength","chain","values","map","cheat","size","max","useCheats","activeCheat","setActiveCheat","cheatString","setCheatString","cheatStringRef","clearanceTimeoutRef","listenToKeyPresses","keydownListener","document","addEventListener","key","appendedString","toLower","newCheatString","substring","removeEventListener","listenToCheatStrings","isEmpty","RegExp","test","console","log","activatedCheat","find","toUpper","data","setActiveCheatData","newData","clearCheatStringOnTimeout","clearTimeout","puzzleSize","paddedPuzzleSize","puzzleSideSize","sortedValidConfiguration","times","num","finalConfiguration","sides","transformToPaddedIndex","index","Math","floor","transformToNormalIndex","paddedIndex","BoardView","currentConfiguration","setCurrentConfiguration","nextConfiguration","onTileClick","board","data-id","tileValue","tileClassName","data-tile-index","data-tile-value","tile","withCheats","onAnimationEnd","uniqueId","Board","initialConfiguration","onSolveCallback","history","useHistory","isInitialConfigutaionValid","isArray","sortBy","isEqual","boardHelper","extendedInitialConfiguration","configuration","empty","setNextConfiguration","redirectOutIfConfigurationInvalid","push","startGameIfConfigurationValid","onSolve","moveTiles","tileIndex","emptyTileIndex","findIndex","sideAndNeighborIndexes","indexes","includeCurrentIndex","paddedTileIndex","paddedEmptyTileIndex","numberOfIndexesFromTop","numberOfIndexesFromRight","paddedPuzzleSideSize","numberOfIndexesFromBottom","numberOfIndexesFromLeft","side","didReachEmptyIndex","nextIndex","compact","unshift","currentAndNeighborTileIndexes","newCurrentConfiguration","currentConfigurationCopy","forEach","currentOrNeighborTileIndex","newNextConfiguration","sizeOfCurrentOrNeighborTileIndexes","swapTiles","tile1Index","tile2Index","Number","dataset","activeCheatName","activeCheatData","isNil","selected","store","persistor","memo","GamePage","useStore","setInitialConfiguration","didSolvePuzzle","setDidSolvePuzzle","redirectOutIfUsernameInvalid","loadInitialConfiguration","a","fetch","response","json","getState","method","headers","JSON","stringify","goToLeaderboardPage","gamePage","puzzleSolved","gamePaused","gravity","run","numberOfPieces","LeaderboardPage","actionButtonText","actionButtonHref","leaderboardStats","setLeaderboardStats","loadLeaderboard","leaderboardPage","withFade","actionButton","this","instance","window","hj","eventName","Services","hotjarService","init","combineReducers","makeReducer","defaultState","persistConfig","version","storage","persistedReducer","persistReducer","reducer","createStore","middlewares","applyMiddleware","persistStore","initStore","hot","loading","path","exact","component","to","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.42c2a13f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"BoardView_board__KqKuR\",\"tile\":\"BoardView_tile__1lHja\",\"empty\":\"BoardView_empty__1kLRI\",\"top\":\"BoardView_top__2kG_U\",\"moveTop\":\"BoardView_moveTop__2vLv-\",\"right\":\"BoardView_right__39vBT\",\"moveRight\":\"BoardView_moveRight__1nLrT\",\"bottom\":\"BoardView_bottom__2l7JN\",\"moveBottom\":\"BoardView_moveBottom__3wavr\",\"left\":\"BoardView_left__1x1CM\",\"moveLeft\":\"BoardView_moveLeft__32S2t\",\"withCheats\":\"BoardView_withCheats__1s-15\",\"swap\":\"BoardView_swap__1gxIa\",\"flicker\":\"BoardView_flicker__35UQg\",\"selected\":\"BoardView_selected__2tDTE\",\"fadeIn\":\"BoardView_fadeIn__o-Gud\",\"fadeInBottomTop\":\"BoardView_fadeInBottomTop__1Njci\",\"fadeInLeftRight\":\"BoardView_fadeInLeftRight__F-s1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__3gBwN\",\"actions\":\"Stats_actions__1QOC0\",\"restartButton\":\"Stats_restartButton__1UNvd\",\"pauseButton\":\"Stats_pauseButton__1pDxZ\",\"resumeButton\":\"Stats_resumeButton__2_GFM\",\"fadeIn\":\"Stats_fadeIn__Zoumi\",\"fadeInBottomTop\":\"Stats_fadeInBottomTop__bVIlK\",\"fadeInLeftRight\":\"Stats_fadeInLeftRight__1u6oK\",\"flicker\":\"Stats_flicker__2qIBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animatedButton\":\"AnimatedButton_animatedButton__1SurT\",\"animatedButtonInnerWrapper\":\"AnimatedButton_animatedButtonInnerWrapper__1RucT\",\"animatedButtonBgContainer\":\"AnimatedButton_animatedButtonBgContainer__E2Lzh\",\"disabled\":\"AnimatedButton_disabled__34BNW\",\"fadeIn\":\"AnimatedButton_fadeIn__3rQW2\",\"fadeInBottomTop\":\"AnimatedButton_fadeInBottomTop__2_raM\",\"fadeInLeftRight\":\"AnimatedButton_fadeInLeftRight__1qWH9\",\"flicker\":\"AnimatedButton_flicker__2D1cG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gamePage\":\"GamePage_gamePage__RkYJb\",\"fadeIn\":\"GamePage_fadeIn__1W9Zx\",\"puzzleSolved\":\"GamePage_puzzleSolved__2oQkb\",\"gamePaused\":\"GamePage_gamePaused__v3GrE\",\"stats\":\"GamePage_stats__zYTP1\",\"fadeInBottomTop\":\"GamePage_fadeInBottomTop__3i44h\",\"fadeInLeftRight\":\"GamePage_fadeInLeftRight__lVcuh\",\"flicker\":\"GamePage_flicker__1dmU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leaderboardPage\":\"LeaderboardPage_leaderboardPage__1VFxE\",\"withFade\":\"LeaderboardPage_withFade__2YmSN\",\"fadeInBottomTop\":\"LeaderboardPage_fadeInBottomTop__1VgP3\",\"fadeIn\":\"LeaderboardPage_fadeIn__G-A7Z\",\"actionButton\":\"LeaderboardPage_actionButton__3KS0i\",\"fadeInLeftRight\":\"LeaderboardPage_fadeInLeftRight__183ml\",\"flicker\":\"LeaderboardPage_flicker__1sT0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"MainPage_mainPage__JXrbz\",\"inputWrapper\":\"MainPage_inputWrapper__3mTBc\",\"fadeIn\":\"MainPage_fadeIn__bB1cu\",\"fadeInBottomTop\":\"MainPage_fadeInBottomTop__3NoA8\",\"fadeInLeftRight\":\"MainPage_fadeInLeftRight__2XBc-\",\"flicker\":\"MainPage_flicker__32H5o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fadeIn\":\"index_fadeIn__38lkY\",\"fadeInBottomTop\":\"index_fadeInBottomTop__2JA79\",\"fadeInLeftRight\":\"index_fadeInLeftRight__7Tlft\",\"flicker\":\"index_flicker__1MeR_\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './AnimatedButton.scss';\n\nconst AnimatedButton = React.forwardRef(({\n  className,\n  text,\n  onClick,\n  href,\n  disabled,\n}, ref) => (\n  \n  <div\n    className={classNames(styles.animatedButton, className, {\n      [styles.disabled]: disabled,\n    })}\n  >\n    <div className={styles.animatedButtonInnerWrapper}>\n      <div className={styles.animatedButtonBgContainer}/>\n      <button>\n        <a {...{ href, ref, onClick, role: 'none' }}>\n          {text}\n        </a>\n      </button>\n    </div>\n  </div>\n\n));\n\nAnimatedButton.defaultProps = {\n  className: '',\n  text: '',\n  onClick() {},\n  href: null,\n  disabled: false,\n};\n\nAnimatedButton.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n  href: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nexport default AnimatedButton;\n","export const pathNames = {\n  MAIN: '/',\n  GAME: '/game',\n  LEADERBOARD: '/leaderboard',\n};\n","export const selectUsername = state => state.username;\nexport const selectIsGameMode = state => state.isGameMode;\nexport const selectIsPaused = state => state.isPaused;\nexport const selectMoves = state => state.moves;\nexport const selectTime = state => state.time;\n","import { makeActionCreator } from 'redux-toolbelt';\n\nexport default {\n  setUsername: makeActionCreator('setUsername'),\n  setIsGameMode: makeActionCreator('setIsGameMode'),\n  setIsPaused: makeActionCreator('setIsPaused'),\n  setMoves: makeActionCreator('setMoves'),\n  setTime: makeActionCreator('setTime'),\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport AnimatedButton from 'shared/components/AnimatedButton';\nimport { pathNames } from 'shared/routes/consts';\nimport { selectUsername } from 'shared/selectors';\nimport actions from 'store/actions';\n\nimport styles from './MainPage.scss';\n\nconst MainPage = () => {\n\n  const dispatch = useDispatch();\n  const username = useSelector(selectUsername);\n\n  const inputRef = React.useRef();\n  const startButtonLinkRef = React.useRef();\n  const [isInputFocused, setIsInputFocused] = React.useState(false);\n  \n  const isInputValid = username?.length;\n  const showInputError = (!isInputValid && !isInputFocused);\n  \n  const resetUsernameOnLoad = React.useCallback(() => {\n\n    dispatch(actions.setUsername(null));\n\n  }, [dispatch]);\n\n  const focusInputOnLoad = React.useCallback(() => {\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    inputRef.current.focus();\n\n  }, []);\n\n  const onSubmit = React.useCallback(e => {\n\n    e.preventDefault();\n    \n    if (!startButtonLinkRef.current) {\n      return;\n    }\n\n    startButtonLinkRef.current.click();\n\n  }, []);\n\n  React.useEffect(focusInputOnLoad, [focusInputOnLoad]);\n\n  React.useEffect(resetUsernameOnLoad, [resetUsernameOnLoad]);\n\n  return (\n    <main className={styles.mainPage}>\n\n      <form onSubmit={onSubmit}>\n        \n        <h1>15 Puzzle</h1>\n\n        <div\n          className={classNames(styles.inputWrapper, {\n            withError: showInputError,\n          })}\n          data-validate=\"Username is reauired\"\n        >\n          <input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Type your username\"\n            onChange={e => dispatch(actions.setUsername(e.target.value))}\n            onFocus={() => setIsInputFocused(true)}\n            onBlur={() => setIsInputFocused(false)}\n            ref={inputRef}\n          />\n          <span data-symbol=\"&#xf206;\"/>\n        </div>\n\n        <AnimatedButton\n          text=\"Start Game\"\n          href={pathNames.GAME}\n          ref={startButtonLinkRef}\n          disabled={!isInputValid}\n        />\n\n      </form>\n\n    </main>\n  );\n\n};\n\nexport default MainPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst AlertDialog = ({\n  title,\n  body,\n  confirmButton,\n  discardButton,\n  delayMS,\n}) => {\n\n  const showAfterDelay = (_.isNumber(delayMS) && delayMS > 0);\n  const [isOpen, setIsOpen] = React.useState(!showAfterDelay);\n\n  const openDialogAfterDelay = React.useCallback(() => {\n\n    if (!showAfterDelay) {\n      return;\n    }\n\n    setTimeout(() => {\n      setIsOpen(true);\n    }, delayMS);\n    \n  }, [delayMS, showAfterDelay]);\n\n  const onConfirm = React.useCallback((...args) => {\n\n    setIsOpen(false);\n\n    if (_.isFunction(confirmButton?.onClick)) {\n      confirmButton.onClick(...args);\n    }\n\n  }, [confirmButton]);\n\n  const onDiscard = React.useCallback((...args) => {\n\n    setIsOpen(false);\n\n    if (_.isFunction(discardButton?.onClick)) {\n      discardButton.onClick(...args);\n    }\n\n  }, [discardButton]);\n\n  React.useEffect(openDialogAfterDelay, [openDialogAfterDelay]);\n\n  return (\n    <Dialog open={isOpen} onClose={() => setIsOpen(false)}>\n\n      <DialogTitle id=\"alert-dialog-title\">\n        {title || ''}\n      </DialogTitle>\n\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {body || ''}\n        </DialogContentText>\n      </DialogContent>\n\n      {(confirmButton || discardButton) && (\n        <DialogActions>\n          {discardButton && (\n            <Button onClick={onDiscard} color=\"primary\">\n              {discardButton.text || ''}\n            </Button>\n          )}\n          {confirmButton && (\n            <Button onClick={onConfirm} color=\"primary\" autoFocus>\n              {confirmButton.text || ''}\n            </Button>\n          )}\n        </DialogActions>\n      )}\n      \n    </Dialog>\n  );\n\n};\n\nAlertDialog.defaultProps = {\n  title: '',\n  body: '',\n  confirmButton: null,\n  discardButton: null,\n  delayMS: 0,\n};\n\nAlertDialog.propTypes = {\n  title: PropTypes.string,\n  body: PropTypes.string,\n  confirmButton: PropTypes.shape({\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n  discardButton: PropTypes.shape({\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n  delayMS: PropTypes.number,\n};\n\nexport default AlertDialog;\n","import _ from 'lodash';\n\nconst apiBase = (() => {\n\n  if (process.env.NODE_ENV === 'development') {\n    return `${window.location.protocol}//${window.location.hostname}:${process.env.REACT_APP_LOCAL_SERVER_PORT}${process.env.REACT_APP_API_BASE}`;\n  }\n\n  return process.env.REACT_APP_API_BASE;\n  \n})();\n\nconst endpoints = {\n  CONFIGURATION: '/configuration',\n  RECORD: '/record',\n  LEADERBOARD: '/leaderboard',\n};\n\nconst restUrls = _.reduce(endpoints, (res, endpoint, endpointKey) => {\n  res[endpointKey] = `${apiBase}${endpoint}`;\n  return res;\n}, {});\n\nexport default restUrls;\n","import _ from 'lodash';\n\nexport default {\n  formatTime: time => _.replace((new Date(time)).toUTCString(), /.*(\\d{2}:\\d{2}:\\d{2}).*/, '$1'),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AnimatedButton from 'shared/components/AnimatedButton';\nimport { selectIsGameMode, selectIsPaused, selectMoves, selectTime } from 'shared/selectors';\nimport timeUtils from 'shared/utils/timeUtils';\nimport actions from 'store/actions';\n\nimport styles from './Stats.scss';\n\nconst Stats = ({ className, restartGame }) => {\n  \n  const dispatch = useDispatch();\n\n  const moves = useSelector(selectMoves);\n  const isGameMode = useSelector(selectIsGameMode);\n  const isPaused = useSelector(selectIsPaused);\n\n  const timeRef = React.useRef(isGameMode && !isPaused);\n\n  const startTime = React.useMemo(() => Date.now(), []);\n  const [pauseClickTime, setPauseClickTime] = React.useState();\n  const [totalPauseTimeCount, setTotalPauseTimeCount] = React.useState(0);\n  const totalPlayTimeCount = useSelector(selectTime);\n\n  const updateTime = React.useCallback(() => {\n\n    setTimeout(() => {\n\n      if (!timeRef.current) {\n        return;\n      }\n     \n      dispatch(actions.setTime((Date.now() - startTime) - totalPauseTimeCount));\n\n    }, 500);\n\n  }, [dispatch, startTime, totalPauseTimeCount]);\n\n  const updateTimeRef = React.useCallback(() => {\n\n    timeRef.current = (isGameMode && !isPaused);\n\n  }, [isGameMode, isPaused]);\n\n  const pauseGame = React.useCallback(() => {\n\n    setPauseClickTime(Date.now());\n    dispatch(actions.setIsPaused(true));\n\n  }, [dispatch]);\n\n  const resumeGame = React.useCallback(() => {\n\n    setTotalPauseTimeCount(totalPauseTimeCount + (Date.now() - pauseClickTime));\n    dispatch(actions.setIsPaused(false));\n\n  }, [dispatch, pauseClickTime, totalPauseTimeCount]);\n\n  React.useEffect(updateTime, [updateTime, totalPlayTimeCount]);\n\n  React.useEffect(updateTimeRef, [updateTimeRef]);\n\n  return (\n    <div className={classNames(styles.stats, className)}>\n\n      <div className={styles.actions}>\n        <AnimatedButton\n          className={styles.restartButton}\n          text=\"Restart\"\n          onClick={restartGame}\n        />\n        <AnimatedButton\n          className={classNames({\n            [styles.pauseButton]: !isPaused,\n            [styles.resumeButton]: isPaused,\n          })}\n          text={isPaused ? 'Resume' : 'Pause'}\n          onClick={isPaused ? resumeGame : pauseGame}\n          disabled={!isGameMode}\n        />\n      </div>\n\n      <span>\n        <h4>{timeUtils.formatTime(totalPlayTimeCount)}</h4>\n        <h4>{`Moves: ${moves}`}</h4>\n      </span>\n\n    </div>\n  );\n\n};\n\nStats.defaultProps = {\n  className: '',\n  restartGame() {},\n};\n\nStats.propTypes = {\n  className: PropTypes.string,\n  restartGame: PropTypes.func,\n};\n\nexport default Stats;\n","import React from 'react';\nimport _ from 'lodash';\n\nconst cheats = {\n  SWAP: 'swap',\n};\n\nconst maxCheatStringLength = _.chain(cheats)\n  .values()\n  .map(cheat => _.size(cheat))\n  .max()\n  .value();\n\nconst clearanceTimeoutDelay = 3000;\n\nconst useCheats = () => {\n\n  const [activeCheat, setActiveCheat] = React.useState({});\n  const [cheatString, setCheatString] = React.useState('');\n  const cheatStringRef = React.useRef(cheatString);\n  const clearanceTimeoutRef = React.useRef();\n\n  const listenToKeyPresses = React.useCallback(() => {\n\n    const keydownListener = document.addEventListener('keydown', ({ key }) => {\n      \n      const appendedString = `${cheatStringRef.current}${_.toLower(key)}`;\n      const newCheatString = appendedString.substring(_.size(appendedString) - maxCheatStringLength);\n  \n      setCheatString(newCheatString);\n      cheatStringRef.current = newCheatString;\n  \n    });\n\n    return () => document.removeEventListener('keydown', keydownListener);\n\n  }, []);\n\n  const listenToCheatStrings = React.useCallback(() => {\n\n    if (!_.isEmpty(activeCheat)) {\n\n      const didTurnCheatOff = (new RegExp(`.*${activeCheat.name}.*`, 'i')).test(cheatString);\n\n      if (!didTurnCheatOff) {\n        return;\n      }\n\n      // eslint-disable-next-line no-console\n      console.log('[CHEAT MODE OFF]');\n      setActiveCheat({});\n      setCheatString('');\n\n      return;\n\n    }\n\n    if (!cheatString) {\n      return;\n    }\n\n    const activatedCheat = _.find(cheats, value => {\n      return (new RegExp(`.*${value}.*`)).test(cheatString);\n    });\n\n    if (!activatedCheat) {\n      return;\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(`CHEATER... ==> ${_.toUpper(activatedCheat)}`);\n    setActiveCheat({ name: activatedCheat, data: null });\n    setCheatString('');\n\n  }, [activeCheat, cheatString]);\n\n  const setActiveCheatData = React.useCallback(newData => {\n    setActiveCheat({ ...activeCheat, data: newData });\n  }, [activeCheat]);\n\n  const clearCheatStringOnTimeout = React.useCallback(() => {\n\n    if (!cheatString) {\n      return;\n    }\n\n    if (clearanceTimeoutRef.current) {\n      clearTimeout(clearanceTimeoutRef.current);\n      clearanceTimeoutRef.current = null;\n    }\n\n    clearanceTimeoutRef.current = setTimeout(() => {\n      setCheatString('');\n      cheatStringRef.current = '';\n    }, clearanceTimeoutDelay);\n\n  }, [cheatString]);\n\n  React.useEffect(listenToKeyPresses, [listenToKeyPresses]);\n\n  React.useEffect(listenToCheatStrings, [listenToCheatStrings]);\n\n  React.useEffect(clearCheatStringOnTimeout, [clearCheatStringOnTimeout]);\n\n  return {\n    activeCheat,\n    setActiveCheatData,\n  };\n\n};\n\nuseCheats.cheats = cheats;\n\nexport default useCheats;\n","import _ from 'lodash';\nimport styles from './BoardView.scss';\n\nconst puzzleSideSize = 4;\nexport const paddedPuzzleSideSize = (puzzleSideSize + 2);\nconst puzzleSize = (puzzleSideSize ** 2);\nconst paddedPuzzleSize = (paddedPuzzleSideSize ** 2);\n\nconst emptyPaddedConfiguration = _.times(paddedPuzzleSize, () => -1);\nexport const sortedValidConfiguration = _.times(puzzleSize, num => num);\nexport const finalConfiguration = _.times(puzzleSize, num => ((num + 1) % puzzleSize));\n\nexport const sides = {\n  TOP: 'top',\n  RIGHT: 'right',\n  BOTTOM: 'bottom',\n  LEFT: 'left',\n};\n\nexport const transformToPaddedIndex = index => {\n  \n  const paddedRow = (Math.floor(index / puzzleSideSize) + 1);\n  const paddedColumn = ((index % puzzleSideSize) + 1);\n\n  return ((paddedRow * paddedPuzzleSideSize) + paddedColumn);\n\n};\n\nconst transformToNormalIndex = paddedIndex => {\n\n  const normalRow = (Math.floor(paddedIndex / paddedPuzzleSideSize) - 1);\n  const normalColumn = ((paddedIndex % paddedPuzzleSideSize) - 1);\n\n  return ((normalRow * puzzleSideSize) + normalColumn);\n\n};\n\nexport const padConfiguration = configuration => {\n\n  if (!configuration) {\n    return emptyPaddedConfiguration;\n  }\n\n  return _.reduce(configuration, (res, tile, index) => {\n    res[transformToPaddedIndex(index)] = tile;\n    return res;\n  }, [...emptyPaddedConfiguration]);\n\n};\n\nexport const getSideAndNeighborIndexes = ({ tileIndex, emptyTileIndex, includeCurrentIndex }) => {\n\n  const paddedTileIndex = transformToPaddedIndex(tileIndex);\n  const paddedEmptyTileIndex = transformToPaddedIndex(emptyTileIndex);\n  \n  const numberOfIndexesFromTop = Math.floor((paddedTileIndex - paddedPuzzleSideSize) / paddedPuzzleSideSize);\n  const numberOfIndexesFromRight = (((paddedPuzzleSideSize - 1) - 1) - (paddedTileIndex % paddedPuzzleSideSize));\n  const numberOfIndexesFromBottom = Math.floor(((paddedPuzzleSize - paddedPuzzleSideSize) - paddedTileIndex) / paddedPuzzleSideSize);\n  const numberOfIndexesFromLeft = ((paddedTileIndex % paddedPuzzleSideSize) - 1);\n  \n  const side = (() => {\n\n    if (paddedEmptyTileIndex < paddedTileIndex) {\n\n      if (paddedEmptyTileIndex < (paddedTileIndex - numberOfIndexesFromLeft)) {\n        return sides.TOP;\n      }\n\n      return sides.LEFT;\n\n    }\n\n    if (paddedEmptyTileIndex > paddedTileIndex) {\n\n      if (paddedEmptyTileIndex > (paddedTileIndex + numberOfIndexesFromRight)) {\n        return sides.BOTTOM;\n      }\n\n      return sides.RIGHT;\n\n    }\n\n  })();\n  \n  let indexes;\n  let didReachEmptyIndex = false;\n\n  if (side === sides.TOP) {\n\n    indexes = _.chain(numberOfIndexesFromTop).times(index => {\n      \n      if (didReachEmptyIndex) {\n        return;\n      }\n\n      const nextIndex = transformToNormalIndex(paddedTileIndex - (paddedPuzzleSideSize * (index + 1)));\n\n      if (nextIndex === emptyTileIndex) {\n        didReachEmptyIndex = true;\n        return;\n      }\n\n      return nextIndex;\n\n    }).compact().value();\n\n  }\n\n  if (side === sides.RIGHT) {\n\n    indexes = _.chain(numberOfIndexesFromRight).times(index => {\n\n      if (didReachEmptyIndex) {\n        return;\n      }\n\n      const nextIndex = transformToNormalIndex(paddedTileIndex + (index + 1));\n\n      if (nextIndex === emptyTileIndex) {\n        didReachEmptyIndex = true;\n        return;\n      }\n\n      return nextIndex;\n\n    }).compact().value();\n\n  }\n\n  if (side === sides.BOTTOM) {\n\n    indexes = _.chain(numberOfIndexesFromBottom).times(index => {\n\n      if (didReachEmptyIndex) {\n        return;\n      }\n\n      const nextIndex = transformToNormalIndex(paddedTileIndex + (paddedPuzzleSideSize * (index + 1)));\n\n      if (nextIndex === emptyTileIndex) {\n        didReachEmptyIndex = true;\n        return;\n      }\n\n      return nextIndex;\n\n    }).compact().value();\n\n  }\n\n  if (side === sides.LEFT) {\n\n    indexes = _.chain(numberOfIndexesFromLeft).times(index => {\n\n      if (didReachEmptyIndex) {\n        return;\n      }\n\n      const nextIndex = transformToNormalIndex(paddedTileIndex - (index + 1));\n\n      if (nextIndex === emptyTileIndex) {\n        didReachEmptyIndex = true;\n        return;\n      }\n\n      return nextIndex;\n\n    }).compact().value();\n\n  }\n\n  if (!didReachEmptyIndex) {\n    return;\n  }\n  \n  if (includeCurrentIndex) {\n    indexes.unshift(tileIndex);\n  }\n\n  return { side, indexes };\n\n};\n\nexport const extendConfiguration = configuration => _.map(configuration, value => ({\n  value,\n  className: (value === 0 ? styles.empty : ''),\n}));\n\nexport const shrinkConfiguration = configuration => _.map(configuration, 'value');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport _ from 'lodash';\n\nimport styles from './BoardView.scss';\n\nconst BoardView = ({\n  activeCheat,\n  currentConfiguration,\n  setCurrentConfiguration,\n  nextConfiguration,\n  onTileClick,\n}) => (\n\n  <div className={styles.board} data-id=\"board\">\n\n    {_.map(currentConfiguration, ({ value: tileValue, className: tileClassName }, index) => (\n      <div\n        role=\"none\"\n        key={_.uniqueId(index)}\n        data-tile-index={index}\n        data-tile-value={tileValue}\n        onClick={onTileClick}\n        className={classNames(styles.tile, tileClassName, {\n          [styles.withCheats]: !_.isEmpty(activeCheat),\n          [styles[activeCheat.name]]: activeCheat.name,\n        })}\n        onAnimationEnd={() => {\n          setCurrentConfiguration(nextConfiguration);\n        }}\n      >\n        {tileValue}\n      </div>\n    ))}\n\n  </div>\n\n);\n\nBoardView.defaultProps = {\n  activeCheat: {},\n};\n\nBoardView.propTypes = {\n  activeCheat: PropTypes.shape({\n    name: PropTypes.string,\n    // eslint-disable-next-line react/forbid-prop-types\n    data: PropTypes.any,\n  }),\n  currentConfiguration: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.number,\n      className: PropTypes.string,\n    }),\n  ).isRequired,\n  setCurrentConfiguration: PropTypes.func.isRequired,\n  nextConfiguration: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.number,\n      className: PropTypes.string,\n    }),\n  ).isRequired,\n  onTileClick: PropTypes.func.isRequired,\n};\n\nexport default BoardView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { pathNames } from 'shared/routes/consts';\nimport { selectMoves } from 'shared/selectors';\nimport actions from 'store/actions';\n\nimport useCheats from './useCheats';\nimport * as boardHelper from './boardHelper';\nimport BoardView from './BoardView';\nimport styles from './BoardView.scss';\n\nconst Board = ({ initialConfiguration, onSolveCallback }) => {\n\n  const { activeCheat, setActiveCheatData } = useCheats();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const moves = useSelector(selectMoves);\n\n  const isInitialConfigutaionValid = React.useMemo(() => (\n    _.isArray(initialConfiguration) &&\n    _.chain(initialConfiguration).sortBy().isEqual(boardHelper.sortedValidConfiguration).value()\n  ), [initialConfiguration]);\n\n  const extendedInitialConfiguration = React.useMemo(() => boardHelper.extendConfiguration(initialConfiguration), [initialConfiguration]);\n  \n  const [currentConfiguration, setCurrentConfiguration] = React.useState(extendedInitialConfiguration);\n  const [nextConfiguration, setNextConfiguration] = React.useState([]);\n\n  const redirectOutIfConfigurationInvalid = React.useCallback(() => {\n\n    if (isInitialConfigutaionValid) {\n      return;\n    }\n\n    history.push(pathNames.MAIN);\n        \n  }, [history, isInitialConfigutaionValid]);\n\n  const startGameIfConfigurationValid = React.useCallback(() => {\n    \n    if (!isInitialConfigutaionValid) {\n      return;\n    }\n\n    dispatch(actions.setIsGameMode(true));\n    \n  }, [dispatch, isInitialConfigutaionValid]);\n\n  const onSolve = React.useCallback(() => {\n\n    dispatch(actions.setIsGameMode(false));\n    onSolveCallback();\n\n  }, [dispatch, onSolveCallback]);\n  \n  const moveTiles = React.useCallback(tileIndex => {\n\n    const emptyTileIndex = _.findIndex(currentConfiguration, ({ value: 0 }));\n    const sideAndNeighborIndexes = boardHelper.getSideAndNeighborIndexes({ tileIndex, emptyTileIndex, includeCurrentIndex: true }) || {};\n    const canMoveTile = !_.isEmpty(sideAndNeighborIndexes);\n\n    if (!canMoveTile) {\n      return;\n    }\n\n    const { side, indexes: currentAndNeighborTileIndexes } = sideAndNeighborIndexes;\n\n    const newCurrentConfiguration = (() => {\n\n      const currentConfigurationCopy = [...currentConfiguration];\n    \n      _.forEach(currentAndNeighborTileIndexes, currentOrNeighborTileIndex => {\n        currentConfigurationCopy[currentOrNeighborTileIndex].className = styles[side];\n      });\n\n      return currentConfigurationCopy;\n      \n    })();\n\n    const newNextConfiguration = (() => {\n      \n      const currentConfigurationCopy = [...currentConfiguration];\n      const sizeOfCurrentOrNeighborTileIndexes = _.size(currentAndNeighborTileIndexes);\n\n      _.forEach(currentAndNeighborTileIndexes, (currentOrNeighborTileIndex, index) => {\n        \n        if (index === 0) {\n          currentConfigurationCopy[currentOrNeighborTileIndex] = { value: 0, className: styles.empty };\n        }\n\n        if (index < (sizeOfCurrentOrNeighborTileIndexes - 1)) {\n          currentConfigurationCopy[currentAndNeighborTileIndexes[index + 1]] = { ...currentConfiguration[currentOrNeighborTileIndex], className: '' };\n          return;\n        }\n\n        currentConfigurationCopy[emptyTileIndex] = { ...currentConfiguration[currentOrNeighborTileIndex], className: '' };\n      \n      });\n\n      return currentConfigurationCopy;\n\n    })();\n\n    setCurrentConfiguration(newCurrentConfiguration);\n    setNextConfiguration(newNextConfiguration);\n    dispatch(actions.setMoves(moves + 1));\n\n    return newNextConfiguration;\n\n  }, [currentConfiguration, dispatch, moves]);\n\n  const swapTiles = React.useCallback((tile1Index, tile2Index) => {\n\n    const newNextConfiguration = [...currentConfiguration];\n    newNextConfiguration[tile1Index] = { ...currentConfiguration[tile2Index], className: '' };\n    newNextConfiguration[tile2Index] = { ...currentConfiguration[tile1Index], className: '' };\n    setNextConfiguration(newNextConfiguration);\n    \n    dispatch(actions.setMoves(moves + 1));\n\n    return newNextConfiguration;\n\n  }, [currentConfiguration, dispatch, moves]);\n\n  const onTileClick = React.useCallback(e => {\n    \n    const tileIndex = Number(e.target.dataset.tileIndex);\n    const tileValue = Number(e.target.dataset.tileValue);\n\n    const isEmptyTile = (tileValue === 0);\n    if (isEmptyTile) {\n      return;\n    }\n\n    const newNextConfiguration = (() => {\n\n      if (_.isEmpty(activeCheat)) {\n        return moveTiles(tileIndex);\n      }\n\n      const { name: activeCheatName, data: activeCheatData } = activeCheat || {};\n      \n      if (activeCheatName === useCheats.cheats.SWAP) {\n\n        const isReadyToSwap = (!_.isNil(activeCheatData) && (activeCheatData !== tileIndex));\n        if (!isReadyToSwap) {\n          const newCurrentConfiguration = [...currentConfiguration];\n          newCurrentConfiguration[tileIndex].className = styles.selected;\n          setCurrentConfiguration(newCurrentConfiguration);\n          setActiveCheatData(tileIndex);\n          return;\n        }\n\n        const otherTileIndex = activeCheatData;\n        const configuration = swapTiles(tileIndex, otherTileIndex);\n        setActiveCheatData(null);\n        setCurrentConfiguration(configuration);\n        \n        return configuration;\n\n      }\n\n      return currentConfiguration;\n\n    })();\n\n    const isPuzzleSolved = _.isEqual(\n      boardHelper.shrinkConfiguration(newNextConfiguration),\n      boardHelper.finalConfiguration,\n    );\n\n    if (isPuzzleSolved) {\n      onSolve();\n    }\n    \n  }, [activeCheat, currentConfiguration, moveTiles, onSolve, setActiveCheatData, swapTiles]);\n\n  React.useEffect(redirectOutIfConfigurationInvalid, [redirectOutIfConfigurationInvalid]);\n\n  React.useEffect(startGameIfConfigurationValid, [startGameIfConfigurationValid]);\n\n  return (\n    <BoardView\n      {...{\n        activeCheat,\n        currentConfiguration,\n        setCurrentConfiguration,\n        nextConfiguration,\n        onTileClick,\n      }}\n    />\n  );\n\n};\n\nBoard.defaultProps = {\n  initialConfiguration: [],\n  onSolveCallback() {},\n};\n\nBoard.propTypes = {\n  initialConfiguration: PropTypes.arrayOf(PropTypes.number),\n  onSolveCallback: PropTypes.func,\n};\n\nexport default React.memo(Board);\n","import { applyMiddleware, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport reducer from './reducer';\n  \nlet store;\nlet persistor;\n\nconst persistConfig = {\n  key: 'root',\n  version: '1',\n  storage,\n};\n\nconst bindMiddlewares = middlewares => {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line global-require\n    const { composeWithDevTools } = require('redux-devtools-extension');\n    return composeWithDevTools(applyMiddleware(...middlewares));\n  }\n  return applyMiddleware(...middlewares);\n};\n\nexport default () => {\n\n  if (!store || !persistor) {\n\n    const persistedReducer = persistReducer(persistConfig, reducer);\n\n    store = createStore(persistedReducer, {}, bindMiddlewares([]));\n    persistor = persistStore(store);\n\n  }\n  \n  return { store, persistor };\n  \n};\n","import React from 'react';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Confetti from 'react-confetti';\nimport classNames from 'classnames';\n\nimport AlertDialog from 'shared/components/AlertDialog';\nimport { pathNames } from 'shared/routes/consts';\nimport { selectUsername, selectMoves, selectTime, selectIsPaused } from 'shared/selectors';\nimport restUrls from 'shared/rest/restUrls';\nimport actions from 'store/actions';\n\nimport Stats from './components/Stats';\nimport Board from './components/Board';\nimport styles from './GamePage.scss';\n\nconst GamePage = () => {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const store = useStore();\n  const username = useSelector(selectUsername);\n  const isPaused = useSelector(selectIsPaused);\n\n  const [initialConfiguration, setInitialConfiguration] = React.useState();\n  const [didSolvePuzzle, setDidSolvePuzzle] = React.useState(false);\n\n  const redirectOutIfUsernameInvalid = React.useCallback(() => {\n    \n    if (username) {\n      return;\n    }\n    \n    history.push(pathNames.MAIN);\n\n  }, [history, username]);\n\n  const loadInitialConfiguration = React.useCallback(async () => {\n\n    const response = await fetch(restUrls.CONFIGURATION, {\n      'Content-Type': 'application/json',\n    });\n    const { data } = await response.json();\n\n    setInitialConfiguration(data);\n\n  }, []);\n\n  const restartGame = React.useCallback(() => {\n\n    dispatch(actions.setIsGameMode(false));\n    dispatch(actions.setIsPaused(false));\n    dispatch(actions.setMoves(0));\n    dispatch(actions.setTime(0));\n    setDidSolvePuzzle(false);\n    setInitialConfiguration(null);\n    loadInitialConfiguration();\n\n  }, [dispatch, loadInitialConfiguration]);\n\n  const onSolveCallback = React.useCallback(async () => {\n    \n    setDidSolvePuzzle(true);\n\n    const state = store.getState();\n    const moves = selectMoves(state);\n    const time = selectTime(state);\n    \n    await fetch(restUrls.RECORD, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        data: { username, moves, time },\n      }),\n    });\n    \n  }, [store, username]);\n\n  const goToLeaderboardPage = React.useCallback(() => {\n\n    history.push(pathNames.LEADERBOARD);\n\n  }, [history]);\n\n  React.useEffect(redirectOutIfUsernameInvalid, [redirectOutIfUsernameInvalid]);\n\n  React.useEffect(restartGame, [restartGame]);\n\n  return (\n    <main\n      className={classNames(styles.gamePage, {\n        [styles.puzzleSolved]: didSolvePuzzle,\n        [styles.gamePaused]: isPaused,\n      })}\n    >\n\n      <h1>{initialConfiguration ? `Game on, ${username}!` : 'Loading...'}</h1>\n      \n      {initialConfiguration && (\n        <>\n          <Stats {...{ className: styles.stats, restartGame }}/>\n          <Board {...{ initialConfiguration, onSolveCallback }}/>\n        </>\n      )}\n      \n      {didSolvePuzzle && (\n        <>\n          <Confetti\n            gravity={0.4}\n            run\n            numberOfPieces={400}\n          />\n          <AlertDialog\n            title=\"Amazing!\"\n            body=\"You finally solved it... Much respect\"\n            confirmButton={{\n              text: 'Play again!',\n              onClick: restartGame,\n            }}\n            discardButton={{\n              text: 'Go to leaderboard',\n              onClick: goToLeaderboardPage,\n            }}\n            delayMS={2000}\n          />\n        </>\n      )}\n\n    </main>\n  );\n\n};\n\nexport default GamePage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport _ from 'lodash';\n\nimport AnimatedButton from 'shared/components/AnimatedButton';\nimport restUrls from 'shared/rest/restUrls';\nimport { pathNames } from 'shared/routes/consts';\nimport { selectUsername } from 'shared/selectors';\nimport timeUtils from 'shared/utils/timeUtils';\n\nimport styles from './LeaderboardPage.scss';\n\nconst LeaderboardPage = () => {\n\n  const username = useSelector(selectUsername);\n  \n  const actionButtonText = (username ? 'Play Again' : 'Play');\n  const actionButtonHref = (username ? pathNames.GAME : pathNames.MAIN);\n\n  const [leaderboardStats, setLeaderboardStats] = React.useState();\n\n  const loadLeaderboard = React.useCallback(async () => {\n\n    const response = await fetch(restUrls.LEADERBOARD);\n    const { data } = await response.json();\n\n    setLeaderboardStats(data);\n\n  }, []);\n\n  React.useEffect(loadLeaderboard, [loadLeaderboard]);\n\n  return (\n    <main className={styles.leaderboardPage}>\n\n      <h1\n        className={classNames({\n          [styles.withFade]: (leaderboardStats && !_.isEmpty(leaderboardStats)),\n        })}\n      >\n        {leaderboardStats ? 'Leaderboard' : 'Loading...'}\n      </h1>\n\n      {leaderboardStats && (_.isEmpty(leaderboardStats) ? (\n        <h3>No stats yet... Better hurry up and play!</h3>\n      ) : (\n        <table>\n\n          <thead>\n            <tr>\n              <th>Username</th>\n              <th>Moves</th>\n              <th>Time</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {_.map(leaderboardStats, stats => (\n              <tr key={_.uniqueId(stats.username)}>\n                <td>{stats.username}</td>\n                <td>{stats.moves}</td>\n                <td>{timeUtils.formatTime(stats.time)}</td>\n              </tr>\n            ))}\n          </tbody>\n\n        </table>\n      ))}\n\n      {leaderboardStats && (\n        <AnimatedButton\n          className={styles.actionButton}\n          text={actionButtonText}\n          href={actionButtonHref}\n        />\n      )}\n\n    </main>\n  );\n\n};\n\nexport default LeaderboardPage;\n","import _ from 'lodash';\n\nclass HotjarService {\n\n  constructor() {\n    this.instance = null;\n  }\n\n  init() {\n\n    if (!_.isFunction(window.hj)) {\n      return;\n    }\n\n    this.instance = window.hj;\n\n  }\n\n  trigger(eventName) {\n\n    if (!this.instance) {\n      return;\n    }\n\n    this.instance('trigger', eventName);\n\n  }\n\n}\n\nexport default new HotjarService();\n","import React from 'react';\n\nimport hotjarService from './hotjar';\n\nconst isProduction = (process.env.NODE_ENV === 'production');\n\nconst Services = () => {\n\n  React.useEffect(() => {\n\n    if (!isProduction) {\n      return;\n    }\n\n    hotjarService.init();\n    \n  }, []);\n\n  return null;\n\n};\n\nexport default Services;\n","import { combineReducers } from 'redux';\nimport { makeReducer } from 'redux-toolbelt';\n\nimport actions from './actions';\n\nexport default combineReducers({\n  username: makeReducer(actions.setUsername, { defaultState: null }),\n  isGameMode: makeReducer(actions.setIsGameMode, { defaultState: false }),\n  isPaused: makeReducer(actions.setIsPaused, { defaultState: false }),\n  moves: makeReducer(actions.setMoves, { defaultState: 0 }),\n  time: makeReducer(actions.setTime, { defaultState: 0 }),\n});\n","import React from 'react';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { hot } from 'react-hot-loader/root';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport MainPage from 'pages/MainPage';\nimport GamePage from 'pages/GamePage';\nimport LeaderboardPage from 'pages/LeaderboardPage';\nimport Services from 'shared/services/Services';\nimport { pathNames } from 'shared/routes/consts';\n\nimport initStore from './store/init';\n\nconst { store, persistor } = initStore();\n\nconst App = () => (\n  <ReduxProvider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <Switch>\n          <Route path={pathNames.MAIN} exact component={MainPage}/>\n          <Route path={pathNames.GAME} exact component={GamePage}/>\n          <Route path={pathNames.LEADERBOARD} exact component={LeaderboardPage}/>\n          <Redirect to={pathNames.MAIN}/>\n        </Switch>\n      </Router>\n      <Services/>\n    </PersistGate>\n  </ReduxProvider>\n);\n\nexport default hot(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}