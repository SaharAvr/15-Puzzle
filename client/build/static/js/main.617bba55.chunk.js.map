{"version":3,"sources":["pages/GamePage/components/Stats.scss","pages/GamePage/components/Board.scss","shared/components/AnimatedButton/AnimatedButton.scss","pages/GamePage/GamePage.scss","pages/MainPage/MainPage.scss","pages/LeaderboardPage/LeaderboardPage.scss","index.scss","shared/components/AnimatedButton/AnimatedButton.js","shared/routes/consts.js","shared/selectors/selectors.js","store/actions.js","pages/MainPage/MainPage.js","shared/components/AlertDialog.js","shared/rest/restUrls.js","shared/utils/timeUtils.js","pages/GamePage/components/Stats.js","pages/GamePage/components/Board.js","store/init.js","pages/GamePage/GamePage.js","pages/LeaderboardPage/LeaderboardPage.js","store/reducer.js","App.js","index.js"],"names":["module","exports","AnimatedButton","React","forwardRef","ref","className","text","onClick","href","disabled","classNames","styles","animatedButton","animatedButtonInnerWrapper","animatedButtonBgContainer","role","defaultProps","propTypes","PropTypes","string","func","bool","pathNames","selectUsername","state","username","selectIsGameMode","isGameMode","selectIsPaused","isPaused","selectMoves","moves","selectTime","time","setUsername","makeActionCreator","setIsGameMode","setIsPaused","setMoves","setTime","MainPage","dispatch","useDispatch","useSelector","inputRef","useRef","startButtonLinkRef","useState","isInputFocused","setIsInputFocused","isInputValid","length","showInputError","resetUsernameOnLoad","useCallback","actions","focusInputOnLoad","current","focus","onSubmit","e","preventDefault","click","useEffect","mainPage","inputWrapper","withError","data-validate","type","name","placeholder","onChange","target","value","onFocus","onBlur","data-symbol","AlertDialog","title","body","confirmButton","discardButton","delayMS","showAfterDelay","_","isNumber","isOpen","setIsOpen","openDialogAfterDelay","setTimeout","onConfirm","isFunction","onDiscard","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","color","autoFocus","restUrls","reduce","CONFIGURATION","RECORD","LEADERBOARD","res","endpoint","endpointKey","process","replace","Date","toUTCString","Stats","restartGame","timeRef","startTime","useMemo","now","pauseClickTime","setPauseClickTime","totalPauseTimeCount","setTotalPauseTimeCount","totalPlayTimeCount","updateTime","updateTimeRef","pauseGame","resumeGame","stats","restartButton","pauseButton","resumeButton","timeUtils","puzzleSize","paddedPuzzleSize","puzzleSideSize","emptyPaddedConfiguration","times","sortedValidConfiguration","num","finalConfiguration","transformToPaddedIndex","index","paddedPuzzleSideSize","Math","floor","Board","initialConfiguration","onSolveCallback","history","useHistory","isInitialConfigutaionValid","isArray","chain","sortBy","isEqual","extendedInitialConfiguration","configuration","map","empty","currentConfiguration","setCurrentConfiguration","nextConfiguration","setNextConfiguration","paddedConfiguration","tile","redirectOutIfConfigurationInvalid","push","startGameIfConfigurationValid","onSolve","getPaddedTileNeighbors","tileIndex","paddedTileIndex","top","right","bottom","left","onTileClick","tileValue","Number","dataset","paddedTileNeighbors","movementDirection","findKey","newCurrentConfiguration","newNextConfiguration","findIndex","board","data-id","tileClassName","data-tile-index","data-tile-value","onAnimationEnd","uniqueId","store","persistor","memo","GamePage","useStore","setInitialConfiguration","didSolvePuzzle","setDidSolvePuzzle","redirectOutIfUsernameInvalid","loadInitialConfiguration","a","fetch","response","json","data","getState","method","headers","JSON","stringify","goToLeaderboardPage","go","gamePage","puzzleSolved","gamePaused","gravity","run","numberOfPieces","LeaderboardPage","actionButtonText","actionButtonHref","leaderboardStats","setLeaderboardStats","loadLeaderboard","leaderboardPage","isEmpty","actionButton","combineReducers","makeReducer","defaultState","persistConfig","key","version","storage","persistedReducer","persistReducer","reducer","createStore","middlewares","applyMiddleware","persistStore","initStore","hot","loading","path","exact","component","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.617bba55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__1IUkc\",\"actions\":\"Stats_actions__2IFRh\",\"restartButton\":\"Stats_restartButton__D5qSn\",\"pauseButton\":\"Stats_pauseButton__1zDLY\",\"resumeButton\":\"Stats_resumeButton__DdX4D\",\"fadeIn\":\"Stats_fadeIn__NZRyw\",\"fadeInBottomTop\":\"Stats_fadeInBottomTop__281pc\",\"fadeInLeftRight\":\"Stats_fadeInLeftRight__1d-jt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__2S2tZ\",\"tile\":\"Board_tile__17Cgp\",\"empty\":\"Board_empty__37PVI\",\"top\":\"Board_top__YxD1q\",\"moveTop\":\"Board_moveTop__7QMk5\",\"right\":\"Board_right__2AVE8\",\"moveRight\":\"Board_moveRight__2fepS\",\"bottom\":\"Board_bottom__3ulkd\",\"moveBottom\":\"Board_moveBottom__29ch6\",\"left\":\"Board_left__2kOxs\",\"moveLeft\":\"Board_moveLeft__1ixT1\",\"fadeIn\":\"Board_fadeIn__1yWUA\",\"fadeInBottomTop\":\"Board_fadeInBottomTop__3R-1Y\",\"fadeInLeftRight\":\"Board_fadeInLeftRight__SPWXL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animatedButton\":\"AnimatedButton_animatedButton__1SurT\",\"animatedButtonInnerWrapper\":\"AnimatedButton_animatedButtonInnerWrapper__1RucT\",\"animatedButtonBgContainer\":\"AnimatedButton_animatedButtonBgContainer__E2Lzh\",\"disabled\":\"AnimatedButton_disabled__34BNW\",\"fadeIn\":\"AnimatedButton_fadeIn__3rQW2\",\"fadeInBottomTop\":\"AnimatedButton_fadeInBottomTop__2_raM\",\"fadeInLeftRight\":\"AnimatedButton_fadeInLeftRight__1qWH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gamePage\":\"GamePage_gamePage__RkYJb\",\"fadeIn\":\"GamePage_fadeIn__1W9Zx\",\"puzzleSolved\":\"GamePage_puzzleSolved__2oQkb\",\"gamePaused\":\"GamePage_gamePaused__v3GrE\",\"stats\":\"GamePage_stats__zYTP1\",\"fadeInBottomTop\":\"GamePage_fadeInBottomTop__3i44h\",\"fadeInLeftRight\":\"GamePage_fadeInLeftRight__lVcuh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"MainPage_mainPage__JXrbz\",\"inputWrapper\":\"MainPage_inputWrapper__3mTBc\",\"fadeIn\":\"MainPage_fadeIn__bB1cu\",\"fadeInBottomTop\":\"MainPage_fadeInBottomTop__3NoA8\",\"fadeInLeftRight\":\"MainPage_fadeInLeftRight__2XBc-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leaderboardPage\":\"LeaderboardPage_leaderboardPage__1VFxE\",\"fadeIn\":\"LeaderboardPage_fadeIn__G-A7Z\",\"actionButton\":\"LeaderboardPage_actionButton__3KS0i\",\"fadeInBottomTop\":\"LeaderboardPage_fadeInBottomTop__1VgP3\",\"fadeInLeftRight\":\"LeaderboardPage_fadeInLeftRight__183ml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fadeIn\":\"index_fadeIn__38lkY\",\"fadeInBottomTop\":\"index_fadeInBottomTop__2JA79\",\"fadeInLeftRight\":\"index_fadeInLeftRight__7Tlft\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './AnimatedButton.scss';\n\nconst AnimatedButton = React.forwardRef(({\n  className,\n  text,\n  onClick,\n  href,\n  disabled,\n}, ref) => (\n  \n  <div\n    className={classNames(styles.animatedButton, className, {\n      [styles.disabled]: disabled,\n    })}\n  >\n    <div className={styles.animatedButtonInnerWrapper}>\n      <div className={styles.animatedButtonBgContainer}/>\n      <button>\n        <a {...{ href, ref, onClick, role: 'none' }}>\n          {text}\n        </a>\n      </button>\n    </div>\n  </div>\n\n));\n\nAnimatedButton.defaultProps = {\n  className: '',\n  text: '',\n  onClick() {},\n  href: null,\n  disabled: false,\n};\n\nAnimatedButton.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n  href: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nexport default AnimatedButton;\n","export const pathNames = {\n  MAIN: '/',\n  GAME: '/game',\n  LEADERBOARD: '/leaderboard',\n};\n","export const selectUsername = state => state.username;\nexport const selectIsGameMode = state => state.isGameMode;\nexport const selectIsPaused = state => state.isPaused;\nexport const selectMoves = state => state.moves;\nexport const selectTime = state => state.time;\n","import { makeActionCreator } from 'redux-toolbelt';\n\nexport default {\n  setUsername: makeActionCreator('setUsername'),\n  setIsGameMode: makeActionCreator('setIsGameMode'),\n  setIsPaused: makeActionCreator('setIsPaused'),\n  setMoves: makeActionCreator('setMoves'),\n  setTime: makeActionCreator('setTime'),\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport AnimatedButton from 'shared/components/AnimatedButton';\nimport { pathNames } from 'shared/routes/consts';\nimport { selectUsername } from 'shared/selectors';\nimport actions from 'store/actions';\n\nimport styles from './MainPage.scss';\n\nconst MainPage = () => {\n\n  const dispatch = useDispatch();\n  const username = useSelector(selectUsername);\n\n  const inputRef = React.useRef();\n  const startButtonLinkRef = React.useRef();\n  const [isInputFocused, setIsInputFocused] = React.useState(false);\n  \n  const isInputValid = username?.length;\n  const showInputError = (!isInputValid && !isInputFocused);\n  \n  const resetUsernameOnLoad = React.useCallback(() => {\n\n    dispatch(actions.setUsername(null));\n\n  }, [dispatch]);\n\n  const focusInputOnLoad = React.useCallback(() => {\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    inputRef.current.focus();\n\n  }, []);\n\n  const onSubmit = React.useCallback(e => {\n\n    e.preventDefault();\n    \n    if (!startButtonLinkRef.current) {\n      return;\n    }\n\n    startButtonLinkRef.current.click();\n\n  }, []);\n\n  React.useEffect(focusInputOnLoad, [focusInputOnLoad]);\n\n  React.useEffect(resetUsernameOnLoad, [resetUsernameOnLoad]);\n\n  return (\n    <main className={styles.mainPage}>\n\n      <form onSubmit={onSubmit}>\n        \n        <h1>15 Puzzle</h1>\n\n        <div\n          className={classNames(styles.inputWrapper, {\n            withError: showInputError,\n          })}\n          data-validate=\"Username is reauired\"\n        >\n          <input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Type your username\"\n            onChange={e => dispatch(actions.setUsername(e.target.value))}\n            onFocus={() => setIsInputFocused(true)}\n            onBlur={() => setIsInputFocused(false)}\n            ref={inputRef}\n          />\n          <span data-symbol=\"&#xf206;\"/>\n        </div>\n\n        <AnimatedButton\n          text=\"Start Game\"\n          href={pathNames.GAME}\n          ref={startButtonLinkRef}\n          disabled={!isInputValid}\n        />\n\n      </form>\n\n    </main>\n  );\n\n};\n\nexport default MainPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst AlertDialog = ({\n  title,\n  body,\n  confirmButton,\n  discardButton,\n  delayMS,\n}) => {\n\n  const showAfterDelay = (_.isNumber(delayMS) && delayMS > 0);\n  const [isOpen, setIsOpen] = React.useState(!showAfterDelay);\n\n  const openDialogAfterDelay = React.useCallback(() => {\n\n    if (!showAfterDelay) {\n      return;\n    }\n\n    setTimeout(() => {\n      setIsOpen(true);\n    }, delayMS);\n    \n  }, [delayMS, showAfterDelay]);\n\n  const onConfirm = React.useCallback((...args) => {\n\n    setIsOpen(false);\n\n    if (_.isFunction(confirmButton?.onClick)) {\n      confirmButton.onClick(...args);\n    }\n\n  }, [confirmButton]);\n\n  const onDiscard = React.useCallback((...args) => {\n\n    setIsOpen(false);\n\n    if (_.isFunction(discardButton?.onClick)) {\n      discardButton.onClick(...args);\n    }\n\n  }, [discardButton]);\n\n  React.useEffect(openDialogAfterDelay, [openDialogAfterDelay]);\n\n  return (\n    <Dialog open={isOpen} onClose={() => setIsOpen(false)}>\n\n      <DialogTitle id=\"alert-dialog-title\">\n        {title || ''}\n      </DialogTitle>\n\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {body || ''}\n        </DialogContentText>\n      </DialogContent>\n\n      {(confirmButton || discardButton) && (\n        <DialogActions>\n          {discardButton && (\n            <Button onClick={onDiscard} color=\"primary\">\n              {discardButton.text || ''}\n            </Button>\n          )}\n          {confirmButton && (\n            <Button onClick={onConfirm} color=\"primary\" autoFocus>\n              {confirmButton.text || ''}\n            </Button>\n          )}\n        </DialogActions>\n      )}\n      \n    </Dialog>\n  );\n\n};\n\nAlertDialog.defaultProps = {\n  title: '',\n  body: '',\n  confirmButton: null,\n  discardButton: null,\n  delayMS: 0,\n};\n\nAlertDialog.propTypes = {\n  title: PropTypes.string,\n  body: PropTypes.string,\n  confirmButton: PropTypes.shape({\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n  discardButton: PropTypes.shape({\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n  delayMS: PropTypes.number,\n};\n\nexport default AlertDialog;\n","import _ from 'lodash';\n\nconst apiBase = (() => {\n\n  if (process.env.NODE_ENV === 'development') {\n    return `${window.location.protocol}//${window.location.hostname}:${process.env.REACT_APP_LOCAL_SERVER_PORT}${process.env.REACT_APP_API_BASE}`;\n  }\n\n  return process.env.REACT_APP_API_BASE;\n  \n})();\n\nconst endpoints = {\n  CONFIGURATION: '/configuration',\n  RECORD: '/record',\n  LEADERBOARD: '/leaderboard',\n};\n\nconst restUrls = _.reduce(endpoints, (res, endpoint, endpointKey) => {\n  res[endpointKey] = `${apiBase}${endpoint}`;\n  return res;\n}, {});\n\nexport default restUrls;\n","import _ from 'lodash';\n\nexport default {\n  formatTime: time => _.replace((new Date(time)).toUTCString(), /.*(\\d{2}:\\d{2}:\\d{2}).*/, '$1'),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AnimatedButton from 'shared/components/AnimatedButton';\nimport { selectIsGameMode, selectIsPaused, selectMoves, selectTime } from 'shared/selectors';\nimport timeUtils from 'shared/utils/timeUtils';\nimport actions from 'store/actions';\n\nimport styles from './Stats.scss';\n\nconst Stats = ({ className, restartGame }) => {\n  \n  const dispatch = useDispatch();\n\n  const moves = useSelector(selectMoves);\n  const isGameMode = useSelector(selectIsGameMode);\n  const isPaused = useSelector(selectIsPaused);\n\n  const timeRef = React.useRef(isGameMode && !isPaused);\n\n  const startTime = React.useMemo(() => Date.now(), []);\n  const [pauseClickTime, setPauseClickTime] = React.useState();\n  const [totalPauseTimeCount, setTotalPauseTimeCount] = React.useState(0);\n  const totalPlayTimeCount = useSelector(selectTime);\n\n  const updateTime = React.useCallback(() => {\n\n    setTimeout(() => {\n\n      if (!timeRef.current) {\n        return;\n      }\n     \n      dispatch(actions.setTime((Date.now() - startTime) - totalPauseTimeCount));\n\n    }, 500);\n\n  }, [dispatch, startTime, totalPauseTimeCount]);\n\n  const updateTimeRef = React.useCallback(() => {\n\n    timeRef.current = (isGameMode && !isPaused);\n\n  }, [isGameMode, isPaused]);\n\n  const pauseGame = React.useCallback(() => {\n\n    setPauseClickTime(Date.now());\n    dispatch(actions.setIsPaused(true));\n\n  }, [dispatch]);\n\n  const resumeGame = React.useCallback(() => {\n\n    setTotalPauseTimeCount(totalPauseTimeCount + (Date.now() - pauseClickTime));\n    dispatch(actions.setIsPaused(false));\n\n  }, [dispatch, pauseClickTime, totalPauseTimeCount]);\n\n  React.useEffect(updateTime, [updateTime, totalPlayTimeCount]);\n\n  React.useEffect(updateTimeRef, [updateTimeRef]);\n\n  return (\n    <div className={classNames(styles.stats, className)}>\n\n      <div className={styles.actions}>\n        <AnimatedButton\n          className={styles.restartButton}\n          text=\"Restart\"\n          onClick={restartGame}\n        />\n        <AnimatedButton\n          className={classNames({\n            [styles.pauseButton]: !isPaused,\n            [styles.resumeButton]: isPaused,\n          })}\n          text={isPaused ? 'Resume' : 'Pause'}\n          onClick={isPaused ? resumeGame : pauseGame}\n          disabled={!isGameMode}\n        />\n      </div>\n\n      <span>\n        <h4>{timeUtils.formatTime(totalPlayTimeCount)}</h4>\n        <h4>{`Moves: ${moves}`}</h4>\n      </span>\n\n    </div>\n  );\n\n};\n\nStats.defaultProps = {\n  className: '',\n  restartGame() {},\n};\n\nStats.propTypes = {\n  className: PropTypes.string,\n  restartGame: PropTypes.func,\n};\n\nexport default Stats;\n","/* eslint-disable */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport _ from 'lodash';\n\nimport { pathNames } from 'shared/routes/consts';\nimport { selectMoves } from 'shared/selectors';\nimport actions from 'store/actions';\n\nimport styles from './Board.scss';\n\nconst puzzleSideSize = 4;\nconst paddedPuzzleSideSize = (puzzleSideSize + 2);\nconst puzzleSize = (puzzleSideSize ** 2);\nconst paddedPuzzleSize = (paddedPuzzleSideSize ** 2);\n\nconst emptyPaddedConfiguration = _.times(paddedPuzzleSize, () => -1);\nconst sortedValidConfiguration = _.times(puzzleSize, num => num);\nconst finalConfiguration = _.times(puzzleSize, num => ((num + 1) % puzzleSize));\n\nconst transformToPaddedIndex = index => (\n  (paddedPuzzleSideSize + 1) +\n  (paddedPuzzleSideSize * Math.floor(index / puzzleSideSize)) +\n  (index % puzzleSideSize)\n);\n\nconst padConfiguration = configuration => {\n\n  if (!configuration) {\n    return emptyPaddedConfiguration;\n  }\n\n  return _.reduce(configuration, (res, tile, index) => {\n    res[transformToPaddedIndex(index)] = tile;\n    return res;\n  }, [...emptyPaddedConfiguration]);\n\n};\n\nconst extendConfiguration = configuration => _.map(configuration, value => ({\n  value,\n  className: (value === 0 ? styles.empty : ''),\n}));\n\nconst Board = ({ initialConfiguration, onSolveCallback }) => {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const moves = useSelector(selectMoves);\n\n  const isInitialConfigutaionValid = React.useMemo(() => (\n    _.isArray(initialConfiguration) &&\n    _.chain(initialConfiguration).sortBy().isEqual(sortedValidConfiguration).value()\n  ), [initialConfiguration]);\n\n  const extendedInitialConfiguration = React.useMemo(() => extendConfiguration(initialConfiguration), [initialConfiguration]);\n  \n  const [currentConfiguration, setCurrentConfiguration] = React.useState(extendedInitialConfiguration);\n  const [nextConfiguration, setNextConfiguration] = React.useState();\n  const paddedConfiguration = React.useMemo(() => padConfiguration(currentConfiguration), [currentConfiguration]);\n\n  const redirectOutIfConfigurationInvalid = React.useCallback(() => {\n\n    if (isInitialConfigutaionValid) {\n      return;\n    }\n\n    history.push(pathNames.MAIN);\n        \n  }, [history, isInitialConfigutaionValid]);\n\n  const startGameIfConfigurationValid = React.useCallback(() => {\n    \n    if (!isInitialConfigutaionValid) {\n      return;\n    }\n\n    dispatch(actions.setIsGameMode(true));\n    \n  }, [dispatch, isInitialConfigutaionValid]);\n\n  const onSolve = React.useCallback(() => {\n\n    dispatch(actions.setIsGameMode(false));\n    onSolveCallback();\n\n  }, [dispatch, onSolveCallback]);\n\n  const getPaddedTileNeighbors = React.useCallback(tileIndex => {\n\n    const paddedTileIndex = transformToPaddedIndex(tileIndex);\n      \n    return {\n      top: {\n        index: (paddedTileIndex - paddedPuzzleSideSize),\n        value: paddedConfiguration[(paddedTileIndex - paddedPuzzleSideSize)]?.value,\n      },\n      right: {\n        index: (paddedTileIndex + 1),\n        value: paddedConfiguration[(paddedTileIndex + 1)]?.value,\n      },\n      bottom: {\n        index: (paddedTileIndex + paddedPuzzleSideSize),\n        value: paddedConfiguration[(paddedTileIndex + paddedPuzzleSideSize)]?.value,\n      },\n      left: {\n        index: (paddedTileIndex - 1),\n        value: paddedConfiguration[(paddedTileIndex - 1)]?.value,\n      },\n    };\n\n  }, [paddedConfiguration]);\n  \n  const onTileClick = React.useCallback(e => {\n    \n    const tileValue = Number(e.target.dataset.tileValue);\n    const tileIndex = Number(e.target.dataset.tileIndex);\n\n    const isEmptyTile = (tileValue === 0);\n    if (isEmptyTile) {\n      return;\n    }\n\n    const paddedTileNeighbors = getPaddedTileNeighbors(tileIndex);\n\n    const movementDirection = _.findKey(paddedTileNeighbors, ({ value: neighborTileValue }) => (neighborTileValue === 0));\n    if (!movementDirection) {\n      return;\n    }\n    \n    const newCurrentConfiguration = [...currentConfiguration];\n    newCurrentConfiguration[tileIndex] = { value: tileValue, className: styles[movementDirection] };\n    setCurrentConfiguration(newCurrentConfiguration);\n\n    const newNextConfiguration = [...currentConfiguration];\n    const emptyTileIndex = _.findIndex(currentConfiguration, ({ value }) => (value === 0));\n    newNextConfiguration[emptyTileIndex] = { value: tileValue, className: '' };\n    newNextConfiguration[tileIndex] = { value: 0, className: styles.empty };\n    setNextConfiguration(newNextConfiguration);\n    \n    dispatch(actions.setMoves(moves + 1));\n\n    const isPuzzleSolved = _.isEqual(_.map(newNextConfiguration, 'value'), finalConfiguration);\n    if (isPuzzleSolved) {\n      onSolve();\n    }\n    \n  }, [currentConfiguration, dispatch, getPaddedTileNeighbors, moves, onSolve]);\n\n  React.useEffect(redirectOutIfConfigurationInvalid, [redirectOutIfConfigurationInvalid]);\n\n  React.useEffect(startGameIfConfigurationValid, [startGameIfConfigurationValid]);\n\n  return (\n    <div className={styles.board} data-id=\"board\">\n\n      {_.map(currentConfiguration, ({ value: tileValue, className: tileClassName }, index) => (\n        <div\n          role=\"none\"\n          key={_.uniqueId(index)}\n          data-tile-index={index}\n          data-tile-value={tileValue}\n          onClick={onTileClick}\n          className={classNames(styles.tile, tileClassName)}\n          onAnimationEnd={() => {\n            setCurrentConfiguration(nextConfiguration);\n          }}\n        >\n          {tileValue}\n        </div>\n      ))}\n\n    </div>\n  );\n\n};\n\nBoard.defaultProps = {\n  initialConfiguration: [],\n  onSolveCallback() {},\n};\n\nBoard.propTypes = {\n  initialConfiguration: PropTypes.arrayOf(PropTypes.number),\n  onSolveCallback: PropTypes.func,\n};\n\nexport default React.memo(Board);\n","import { applyMiddleware, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport reducer from './reducer';\n  \nlet store;\nlet persistor;\n\nconst persistConfig = {\n  key: 'root',\n  version: '1',\n  storage,\n};\n\nconst bindMiddlewares = middlewares => {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line global-require\n    const { composeWithDevTools } = require('redux-devtools-extension');\n    return composeWithDevTools(applyMiddleware(...middlewares));\n  }\n  return applyMiddleware(...middlewares);\n};\n\nexport default () => {\n\n  if (!store || !persistor) {\n\n    const persistedReducer = persistReducer(persistConfig, reducer);\n\n    store = createStore(persistedReducer, {}, bindMiddlewares([]));\n    persistor = persistStore(store);\n\n  }\n  \n  return { store, persistor };\n  \n};\n","import React from 'react';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Confetti from 'react-confetti';\nimport classNames from 'classnames';\n\nimport AlertDialog from 'shared/components/AlertDialog';\nimport { pathNames } from 'shared/routes/consts';\nimport { selectUsername, selectMoves, selectTime, selectIsPaused } from 'shared/selectors';\nimport restUrls from 'shared/rest/restUrls';\nimport actions from 'store/actions';\n\nimport Stats from './components/Stats';\nimport Board from './components/Board';\nimport styles from './GamePage.scss';\n\nconst GamePage = () => {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const store = useStore();\n  const username = useSelector(selectUsername);\n  const isPaused = useSelector(selectIsPaused);\n\n  const [initialConfiguration, setInitialConfiguration] = React.useState();\n  const [didSolvePuzzle, setDidSolvePuzzle] = React.useState(false);\n\n  const redirectOutIfUsernameInvalid = React.useCallback(() => {\n    \n    if (username) {\n      return;\n    }\n    \n    history.push(pathNames.MAIN);\n\n  }, [history, username]);\n\n  const loadInitialConfiguration = React.useCallback(async () => {\n\n    const response = await fetch(restUrls.CONFIGURATION, {\n      'Content-Type': 'application/json',\n    });\n    const { data } = await response.json();\n\n    setInitialConfiguration(data);\n\n  }, []);\n\n  const restartGame = React.useCallback(() => {\n\n    dispatch(actions.setIsGameMode(false));\n    dispatch(actions.setIsPaused(false));\n    dispatch(actions.setMoves(0));\n    dispatch(actions.setTime(0));\n    setDidSolvePuzzle(false);\n    setInitialConfiguration(null);\n    loadInitialConfiguration();\n\n  }, [dispatch, loadInitialConfiguration]);\n\n  const onSolveCallback = React.useCallback(async () => {\n    \n    setDidSolvePuzzle(true);\n\n    const state = store.getState();\n    const moves = selectMoves(state);\n    const time = selectTime(state);\n    \n    await fetch(restUrls.RECORD, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        data: { username, moves, time },\n      }),\n    });\n    \n  }, [store, username]);\n\n  const goToLeaderboardPage = React.useCallback(() => {\n\n    history.push(pathNames.LEADERBOARD);\n    history.go();\n\n  }, [history]);\n\n  React.useEffect(redirectOutIfUsernameInvalid, [redirectOutIfUsernameInvalid]);\n\n  React.useEffect(restartGame, [restartGame]);\n\n  return (\n    <main\n      className={classNames(styles.gamePage, {\n        [styles.puzzleSolved]: didSolvePuzzle,\n        [styles.gamePaused]: isPaused,\n      })}\n    >\n\n      <h1>{initialConfiguration ? `Game on, ${username}!` : 'Loading...'}</h1>\n      \n      {initialConfiguration && (\n        <>\n          <Stats {...{ className: styles.stats, restartGame }}/>\n          <Board {...{ initialConfiguration, onSolveCallback }}/>\n        </>\n      )}\n      \n      {didSolvePuzzle && (\n        <>\n          <Confetti\n            gravity={0.4}\n            run\n            numberOfPieces={400}\n          />\n          <AlertDialog\n            title=\"Amazing!\"\n            body=\"You finally solved it... Much respect\"\n            confirmButton={{\n              text: 'Play again!',\n              onClick: restartGame,\n            }}\n            discardButton={{\n              text: 'Go to leaderboard',\n              onClick: goToLeaderboardPage,\n            }}\n            delayMS={2000}\n          />\n        </>\n      )}\n\n    </main>\n  );\n\n};\n\nexport default GamePage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nimport AnimatedButton from 'shared/components/AnimatedButton';\nimport restUrls from 'shared/rest/restUrls';\nimport { pathNames } from 'shared/routes/consts';\nimport { selectUsername } from 'shared/selectors';\nimport timeUtils from 'shared/utils/timeUtils';\n\nimport styles from './LeaderboardPage.scss';\n\nconst LeaderboardPage = () => {\n\n  const username = useSelector(selectUsername);\n  \n  const actionButtonText = (username ? 'Play Again' : 'Play');\n  const actionButtonHref = (username ? pathNames.GAME : pathNames.MAIN);\n\n  const [leaderboardStats, setLeaderboardStats] = React.useState();\n\n  const loadLeaderboard = React.useCallback(async () => {\n\n    const response = await fetch(restUrls.LEADERBOARD);\n    const { data } = await response.json();\n\n    setLeaderboardStats(data);\n\n  }, []);\n\n  React.useEffect(loadLeaderboard, [loadLeaderboard]);\n\n  return (\n    <main\n      className={styles.leaderboardPage}\n    >\n\n      <h1>{leaderboardStats ? 'Leaderboard' : 'Loading...'}</h1>\n\n      {leaderboardStats && (_.isEmpty(leaderboardStats) ? (\n        <h3>No stats yet... Better hurry up and play!</h3>\n      ) : (\n        <table>\n\n          <thead>\n            <tr>\n              <th>Username</th>\n              <th>Moves</th>\n              <th>Time</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {_.map(leaderboardStats, stats => (\n              <tr key={_.uniqueId(stats.username)}>\n                <td>{stats.username}</td>\n                <td>{stats.moves}</td>\n                <td>{timeUtils.formatTime(stats.time)}</td>\n              </tr>\n            ))}\n          </tbody>\n\n        </table>\n      ))}\n\n      {leaderboardStats && (\n        <AnimatedButton\n          className={styles.actionButton}\n          text={actionButtonText}\n          href={actionButtonHref}\n        />\n      )}\n\n    </main>\n  );\n\n};\n\nexport default LeaderboardPage;\n","import { combineReducers } from 'redux';\nimport { makeReducer } from 'redux-toolbelt';\n\nimport actions from './actions';\n\nexport default combineReducers({\n  username: makeReducer(actions.setUsername, { defaultState: null }),\n  isGameMode: makeReducer(actions.setIsGameMode, { defaultState: false }),\n  isPaused: makeReducer(actions.setIsPaused, { defaultState: false }),\n  moves: makeReducer(actions.setMoves, { defaultState: 0 }),\n  time: makeReducer(actions.setTime, { defaultState: 0 }),\n});\n","import React from 'react';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { hot } from 'react-hot-loader/root';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport MainPage from 'pages/MainPage';\nimport GamePage from 'pages/GamePage';\nimport LeaderboardPage from 'pages/LeaderboardPage';\nimport { pathNames } from 'shared/routes/consts';\n\nimport initStore from './store/init';\n\nconst { store, persistor } = initStore();\n\nconst App = () => (\n  <ReduxProvider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <Switch>\n          <Route path={pathNames.MAIN} exact component={MainPage}/>\n          <Route path={pathNames.GAME} exact component={GamePage}/>\n          <Route path={pathNames.LEADERBOARD} exact component={LeaderboardPage}/>\n          <Redirect to={pathNames.MAIN}/>\n        </Switch>\n      </Router>\n    </PersistGate>\n  </ReduxProvider>\n);\n\nexport default hot(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}